1.清除浮动的几种方式，各自的优缺点？
	1、父级div定义height
		优点：简单，代码少，容易掌握
		缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题
	2、结尾处加空div标签clear:both
		优点：简单，代码少，浏览器支持好，不容易出现怪问题
		缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不爽
	3、父级div定义伪类:after和zoom
		优点：浏览器支持好，不容易出现怪问题（目前：大型网站都有使用，如：腾迅，网易，新浪等等）
		缺点：代码多，不少初学者不理解原理，要两句代码结合使用，才能让主流浏览器都支持
	4、父级div定义overflow:hidden
		优点：简单，代码少，浏览器支持好
		缺点：不能和position配合使用，因为超出的尺寸的会被隐藏
	5、父级div定义overflow:auto
		优点：简单，代码少，浏览器支持好
		缺点：内部宽高超过父级div时，会出现滚动条。
	6、父级div也一起浮动
		优点：没有优点
		缺点：会产生新的浮动问题。
	7、父级div定义display:table
		优点：没有优点
		缺点：会产生新的未知问题
	8、结尾处加br标签clear:both
		原理：父级div定义zoom:1来解决IE浮动问题，结尾处加br标签clear:both
		建议：不推荐使用，只作了解

2. JS哪些操作会造成内存泄露
	1）意外的全局变量引起的内存泄露
	2）闭包引起的内存泄露
	3）没有清理的DOM元素引用
	4）被遗忘的定时器或者回调 
	5）子元素存在引起的内存泄露

window.onload()函数和jQuery中的document.ready()有什么区别：
  	 1.执行时间
		window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行。
		$(document).ready()是DOM结构绘制完毕后就执行，不必等到加载完毕。
		$(document).ready()在 window.onload之前执行
	2.编写个数不同
		window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个
		$(document).ready()可以同时编写多个，并且都可以得到执行
	3.简化写法
		window.onload没有简化写法
		$(document).ready(function(){})可以简写成$(function(){});
	4.浏览器兼容性
		 $(document).ready()可以跨浏览器，例如在使用ajax请求的时候自动会处理兼容
	5.出现地方不同
		window.onload是js标准，可出现在任何js脚本中
 		$(document).ready只有在jq库中出现

4.函数表达式和函数声明的区别

	1.函数声明
		函数声明以function关键字开头，接着是必须的函数（变量）名和以逗号分隔的可选的参数列表，再接着就是以大括号封装的函数体。函数声明必须是一个单独的JavaScript语句。
	2.函数表达式
		在任何情况下都是其它JavaScript语句的一部分（比如赋值表达式等号的右侧、函数的参数）的函数被称为函数表达式。


5.new操作符都干了什么

	1.创建一个空对象并将this变量引用该对象，同时还继承了该函数的原型
	2.属性和方法被加入到this引用的对象中
	3.新创建的对象由this所引用，并且最后隐式的返回this

-------------------------------------------------------------------------------------------------------------------------------------

6、对语义化如何理解？
用正确的标签做正确的事情！
HTML语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；
在没有样式CCS情况下也以一种文档格式显示，并且是容易阅读的。
搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。
使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。

7、HTML5的离线储存有几种方式？
localStorage长期存储数据，浏览器关闭后数据不丢失；
sessionStorage??数据在浏览器关闭后自动删除。

8、iframe有那些缺点？
iframe会阻塞主页面的Onload事件；
iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。使用iframe之前需要考虑这两个缺点。
如果需要使用iframe，最好是通过javascript动态给iframe添加src属性值，这样可以可以绕开以上两个问题。

9、请描述一下 cookies，sessionStorage 和 localStorage 的区别？
cookie在浏览器和服务器间来回传递。
 sessionStorage和localStorage不会sessionStorage和localStorage的存储空间更大；
sessionStorage和localStorage有更多丰富易用的接口；
sessionStorage和localStorage各自独立的存储空间；

10、CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？
1.id选择器（ # myid） 　　  　2.类选择器（.myclassname） 
3.标签选择器（div, h1, p　   　4.相邻选择器（h1 + p） 
5.子选择器（ul < li） 　　　 　6.后代选择器（li a） 
7.通配符选择器（ * ） 　　　　8.属性选择器（a[rel = "external"]） 
可继承的样式： font-size font-family color;
不可继承的样式：border padding margin width height ;
优先级就近原则，同权重情况下样式定义最近者为准;
载入样式以最后载入的定位为准;
优先级为:
!important >??id > class > tag???? important 比 内联优先级高
